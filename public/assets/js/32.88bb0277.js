(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{646:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("自从自己买了一台阿里云服务器后，我只会用 finalshell、宝塔可视化面板来对服务器进行基本操作，我觉得这太逊啦~~看了学长的运维成果，我也挺感兴趣的，于是自己也去学习 docker，这里记录一下遇到的坑。")]),s._v(" "),a("h3",{attrs:{id:"_9-18"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-18"}},[s._v("#")]),s._v(" 9.18")]),s._v(" "),a("p",[s._v("这里一开始我数据卷挂载一个 html 到 tomcat 上，可是服务器访问的时候怎么都不会显示这个 html 文件，而是现在默认的。我查了一下，是因为 tomcat 默认是访问目录是 ROOT。")]),s._v(" "),a("p",[s._v("另外一个问题就是，我把 html 放在了 webapps 文件夹下的一个 exam 文件夹里，我需要在 url 拼接上路径才能访问对。如"),a("code",[s._v("strk2.cn:8082/exam")])]),s._v(" "),a("p",[s._v("注意，在服务器上开放端口后，也要去阿里云控制台开放安全组噢")]),s._v(" "),a("h3",{attrs:{id:"_9-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-19"}},[s._v("#")]),s._v(" 9.19")]),s._v(" "),a("p",[s._v("今天在学习如何部署 nginx 集群。集群就是访问一台服务器，可以把流量分发给多台服务器")]),s._v(" "),a("p",[s._v("关键在于 2 个点:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("http "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//集群配置：这里比如我要分发给2台服务器")]),s._v("\n\tupstream nginxcluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tserver "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("47.106")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".198")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".203")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8082")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tserver "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("47.106")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".198")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".203")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8083")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//...")]),s._v("\n    location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \t   root html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \t   index index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginxcluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里注意和上面定义的stream要一样")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("然后在部署的时候遇到一些小问题，可以通过"),a("code",[s._v("docker logs 容器名")]),s._v("来找到错误问题。")]),s._v(" "),a("h3",{attrs:{id:"_9-22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-22"}},[s._v("#")]),s._v(" ~9.22")]),s._v(" "),a("p",[s._v("这几天学习了一些 Dockerfile 的命令："),a("code",[s._v("FROM")]),s._v("、"),a("code",[s._v("ENV")]),s._v("、"),a("code",[s._v("RUN")]),s._v("、"),a("code",[s._v("COPY")]),s._v("等...\n以及通过 docker build -t [NAME] . 来构建一个镜像。")]),s._v(" "),a("blockquote",[a("p",[s._v("[注]：这里一定要加一个点，表示是以当前目录下的 Dockerfile 文件来构建。")])]),s._v(" "),a("h3",{attrs:{id:"_9-25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-25"}},[s._v("#")]),s._v(" 9.25")]),s._v(" "),a("p",[s._v("今天我做了自动部署流程。遇到了不少的困难，记录一下。")]),s._v(" "),a("ul",[a("li",[s._v("首先是 git actions 的使用，可以通过 secrets 定义密钥变量，然后在"),a("code",[s._v(".github\\workflows\\xx.yml")]),s._v("文件中使用。")]),s._v(" "),a("li",[s._v("Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?报错。这个东西我暂时看不懂，应该是网络方面的错误吧。\n解决方法：\n只需要重启一下 daemon 即可。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl daemon-reload\nsudo service docker restart\nsudo service docker status\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("然后就是连接阿里云镜像仓库的各种报错信息。这里一定要结合仓库上面的一些例子来编写 yml。")]),s._v(" "),a("li",[s._v("然后就是连接私有服务器的各种报错。这里我也不多说了，按照错误提示来 debug 就好了。")])]),s._v(" "),a("p",[s._v("yml 文件的编写我打算以后再慢慢的研究，总而言之终于把这个 CI 给弄好了。")]),s._v(" "),a("h3",{attrs:{id:"_9-26"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-26"}},[s._v("#")]),s._v(" 9.26")]),s._v(" "),a("p",[s._v("今天想尝试将博客的 ci 自动化流程弄好，但是还是失败了，准确来说是只弄了一半吧。")]),s._v(" "),a("ul",[a("li",[s._v("首先是 yml 文件以及 Dockerfile 中的根目录环境是不一样的")]),s._v(" "),a("li",[s._v("现在我只能在本地先 build，然后再通过 Dockerfile COPY，我尝试在 Dockerfile 中写入 build，然后发现 npm install 就得等 15min？这也太慢了吧，而且还有各种报错信息，都是路径的问题。哎，给我弄吐了，先这样吧以后再完善。总而言之现在我的博客也不需要 finalshell 来连接服务器然后手动上传了。这也算是进步一丢丢吧。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);